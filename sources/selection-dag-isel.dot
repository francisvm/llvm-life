digraph "scheduler input for foo:entry" {
	rankdir="BT";
	label="scheduler input for foo:entry";

	Node0x467e3b0 [shape=record,shape=Mrecord,label="{EntryToken|t0|{<d0>ch}}"];
	Node0x46cff70 [shape=record,shape=Mrecord,label="{Register %vreg0|t1|{<d0>i32}}"];
	Node0x46d0050 [shape=record,shape=Mrecord,label="{Register %vreg1|t3|{<d0>i32}}"];
	Node0x46d01a0 [shape=record,shape=Mrecord,label="{TargetConstant\<0\>|t6|{<d0>i32}}"];
	Node0x46d0210 [shape=record,shape=Mrecord,label="{Register %EAX|t7|{<d0>i32}}"];
	Node0x46cffe0 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|CopyFromReg|t2|{<d0>i32|<d1>ch}}"];
	Node0x46cffe0:s0 -> Node0x467e3b0:d0[color=blue,style=dashed];
	Node0x46cffe0:s1 -> Node0x46cff70:d0;
	Node0x46d00c0 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|CopyFromReg|t4|{<d0>i32|<d1>ch}}"];
	Node0x46d00c0:s0 -> Node0x467e3b0:d0[color=blue,style=dashed];
	Node0x46d00c0:s1 -> Node0x46d0050:d0;
	Node0x46d0130 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|ADD32rr|t5|{<d0>i32|<d1>i32}}"];
	Node0x46d0130:s0 -> Node0x46cffe0:d0;
	Node0x46d0130:s1 -> Node0x46d00c0:d0;
	Node0x46d0280 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|CopyToReg|t8|{<d0>ch|<d1>glue}}"];
	Node0x46d0280:s0 -> Node0x467e3b0:d0[color=blue,style=dashed];
	Node0x46d0280:s1 -> Node0x46d0210:d0;
	Node0x46d0280:s2 -> Node0x46d0130:d0;
	Node0x46d02f0 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2|<s3>3}|RET|t9|{<d0>ch}}"];
	Node0x46d02f0:s0 -> Node0x46d01a0:d0;
	Node0x46d02f0:s1 -> Node0x46d0210:d0;
	Node0x46d02f0:s2 -> Node0x46d0280:d0[color=blue,style=dashed];
	Node0x46d02f0:s3 -> Node0x46d0280:d1[color=red,style=bold];
	Node0x46d0360 [shape=record,shape=Mrecord,label="{Register %noreg|t10|{<d0>i32}}"];
	Node0x0[ plaintext=circle, label ="GraphRoot"];
	Node0x0 -> Node0x46d02f0:d0[color=blue,style=dashed];
}
