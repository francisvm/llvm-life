digraph "scheduler input for foo:entry" {
	rankdir="BT";
	label="scheduler input for foo:entry";

	Node0x3e47a20 [shape=record,shape=Mrecord,label="{EntryToken|t0|{<d0>ch}}"];
	Node0x3e994a0 [shape=record,shape=Mrecord,label="{Register %vreg0|t1|{<d0>i32}}"];
	Node0x3e99580 [shape=record,shape=Mrecord,label="{Register %vreg1|t3|{<d0>i32}}"];
	Node0x3e996d0 [shape=record,shape=Mrecord,label="{TargetConstant\<0\>|t6|{<d0>i32}}"];
	Node0x3e99740 [shape=record,shape=Mrecord,label="{Register %EAX|t7|{<d0>i32}}"];
	Node0x3e99510 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|CopyFromReg|t2|{<d0>i32|<d1>ch}}"];
	Node0x3e99510:s0 -> Node0x3e47a20:d0[color=blue,style=dashed];
	Node0x3e99510:s1 -> Node0x3e994a0:d0;
	Node0x3e995f0 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|CopyFromReg|t4|{<d0>i32|<d1>ch}}"];
	Node0x3e995f0:s0 -> Node0x3e47a20:d0[color=blue,style=dashed];
	Node0x3e995f0:s1 -> Node0x3e99580:d0;
	Node0x3e99660 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|ADD32rr|t5|{<d0>i32|<d1>i32}}"];
	Node0x3e99660:s0 -> Node0x3e995f0:d0;
	Node0x3e99660:s1 -> Node0x3e99510:d0;
	Node0x3e997b0 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|CopyToReg|t8|{<d0>ch|<d1>glue}}"];
	Node0x3e997b0:s0 -> Node0x3e47a20:d0[color=blue,style=dashed];
	Node0x3e997b0:s1 -> Node0x3e99740:d0;
	Node0x3e997b0:s2 -> Node0x3e99660:d0;
	Node0x3e99820 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2|<s3>3}|RET|t9|{<d0>ch}}"];
	Node0x3e99820:s0 -> Node0x3e996d0:d0;
	Node0x3e99820:s1 -> Node0x3e99740:d0;
	Node0x3e99820:s2 -> Node0x3e997b0:d0[color=blue,style=dashed];
	Node0x3e99820:s3 -> Node0x3e997b0:d1[color=red,style=bold];
	Node0x3e99890 [shape=record,shape=Mrecord,label="{Register %noreg|t10|{<d0>i32}}"];
	Node0x0[ plaintext=circle, label ="GraphRoot"];
	Node0x0 -> Node0x3e99820:d0[color=blue,style=dashed];
}
