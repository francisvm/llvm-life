## LLVM IR

##### clang -S -emit-llvm foo.c -o foo.ll

```llvm
!INCLUDE "sources/foo.ll.modified"
```
---

## LLVM IR

##### opt -mem2reg -S foo.ll -o foo.ll

```llvm
!INCLUDE "sources/foo.opt.ll.modified"
```
---

.selectiondag[![SelectionDAG](sources/selection-dag.jpg)]

---

## TargetLowering - SelectionDAG

#### SDNode

##### llc -view-dag-combine1-dags foo.ll

![SelectionDAG](sources/selection-dag.modified.jpg)

---

## SelectionDAG legalization

#### SDNode

##### llc -view-isel-dags foo.ll

* Remove illegal types
```llvm
i1 -> i32
```

* Remove target-illegal instructions
```llvm
load i32, i32* %1
```
to
```llvm
add nsw i32 %1, 0
```

---

## SelectionDAGISel

#### MachineSDNode

##### llc -view-sched-dags foo.ll

// FIXME : Show only the add node.

.selectiondag[![SelectionDAG](sources/selection-dag-isel.jpg)]

---

## ScheduleDAG

#### MachineInstr

##### llc -print-before=expand-isel-pseudos foo.ll

```llvm
!INCLUDE "sources/schedule-dag.sd"
```

---

## Register allocation

#### Non-SSA MachineInstr

##### llc -print-machineinstrs=virtregrewriter foo.ll

```llvm
!INCLUDE "sources/regalloc.modified.sd"
```

---

## MCInstLower

#### MCInst

##### llc -asm-show-inst foo.ll -o foo.s

```x86
!INCLUDE "sources/mcinst.s"
```

---

## AsmPrinter

#### Assembly

##### llc foo.ll -o foo.s

---

## MCCodeEmitter

#### ELF

#####

---
