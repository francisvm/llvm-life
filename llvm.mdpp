## LLVM IR

##### clang -O1 -S -emit-llvm foo.c -o foo.ll

```llvm
!INCLUDE "sources/foo.modified.ll"
```
---

.selectiondag[![SelectionDAG](sources/selection-dag.jpg)]

---

## TargetLowering - SelectionDAG

#### SDNode

##### llc -O1 -view-dag-combine1-dags foo.ll

.selectiondagmodified[![SelectionDAG](sources/selection-dag.modified.jpg)]

---

## SelectionDAG legalization

#### SDNode

##### llc -O1 -view-isel-dags foo.ll

* Remove illegal types
```llvm
i1 -> i32
```

* Remove target-illegal instructions
```llvm
mul i32 %a, 8
```
to
```llvm
shl i32 %a, 3
```

---

## SelectionDAGISel

#### MachineSDNode

##### llc -O1 -view-sched-dags foo.ll

.selectiondagmodified[![SelectionDAG](sources/selection-dag-isel.modified.jpg)]

---

## SelectionDAGISel

#### MachineSDNode

##### llvm/lib/Target/X86/X86InstrCompiler.td

```tablegen
def : Pat<(add GR32:$src1, GR32:$src2), (ADD32rr GR32:$src1, GR32:$src2)>;
```

---

## ScheduleDAG

#### MachineInstr

##### llc -O1 -print-before=expand-isel-pseudos foo.ll

```llvm
!INCLUDE "sources/schedule-dag.sd"
```

---

## Register allocation

#### Non-SSA MachineInstr

##### llc -O1 -print-machineinstrs=virtregrewriter foo.ll

```llvm
!INCLUDE "sources/regalloc.modified.sd"
```

---

## MCInstLower

#### MCInst

##### llc -O1 -asm-show-inst foo.ll -o foo.s

.mcinst[
```mcinst
!INCLUDE "sources/mcinst.modified.s"
```
]

---

## AsmPrinter

#### Assembly

##### llc -O1 foo.ll -o foo.s / clang -O1 foo.c -S -o foo.s

.asmprinter[
```x86
!INCLUDE "sources/foo.modified.s"
```
]

---

## AsmPrinter

#### Assembly

##### lib/Target/X86/X86InstrArithmetic.td

```tablegen
*def LEA64_32r : I<0x8D, MRMSrcMem,
                  (outs GR32:$dst), (ins lea64_32mem:$src),
                  "lea{l}\t{$src|$dst}, {$dst|$src}",
                  [(set GR32:$dst, lea64_32addr:$src)], IIC_LEA>,
                  OpSize32, Requires<[In64BitMode]>;
```

---

## AsmPrinter

#### Assembly

##### lib/Target/X86/X86InstrArithmetic.td

```tablegen
def LEA64_32r : I<0x8D, MRMSrcMem,
*                 (outs GR32:$dst), (ins lea64_32mem:$src),
                  "lea{l}\t{$src|$dst}, {$dst|$src}",
                  [(set GR32:$dst, lea64_32addr:$src)], IIC_LEA>,
                  OpSize32, Requires<[In64BitMode]>;
```

---

## AsmPrinter

#### Assembly

##### lib/Target/X86/X86InstrArithmetic.td

```tablegen
def LEA64_32r : I<0x8D, MRMSrcMem,
                  (outs GR32:$dst), (ins lea64_32mem:$src),
*                 "lea{l}\t{$src|$dst}, {$dst|$src}",
                  [(set GR32:$dst, lea64_32addr:$src)], IIC_LEA>,
                  OpSize32, Requires<[In64BitMode]>;
```

---

## AsmPrinter

#### Assembly

##### lib/Target/X86/X86InstrArithmetic.td

```tablegen
def LEA64_32r : I<0x8D, MRMSrcMem,
                  (outs GR32:$dst), (ins lea64_32mem:$src),
                  "lea{l}\t{$src|$dst}, {$dst|$src}",
*                 [(set GR32:$dst, lea64_32addr:$src)], IIC_LEA>,
                  OpSize32, Requires<[In64BitMode]>;
```

---

## MCCodeEmitter

#### ELF

##### clang -c -fintegrated-as -O1 foo.c -o foo.o
##### llvm-objdump -disassemble foo.o

.objdump[
```objdump
!INCLUDE "sources/foo.objdump.modified"
```
]

---
